/*--------------------------------*- C++ -*----------------------------------*\ 
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
version     2.0;
format      ascii;
class       dictionary;
object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1.0000e+00;

vertices
(
(-1.41421356e-04  -1.41421356e-04 0.00000000e+00)  // p  0 
(1.41421356e-04  -1.41421356e-04 0.00000000e+00)  // p  1 
(1.41421356e-04  1.41421356e-04 0.00000000e+00)  // p  2 
(-1.41421356e-04  1.41421356e-04 0.00000000e+00)  // p  3 
(-1.41421356e-04  -1.41421356e-04 1.00000000e-02)  // p  4 
(1.41421356e-04  -1.41421356e-04 1.00000000e-02)  // p  5 
(1.41421356e-04  1.41421356e-04 1.00000000e-02)  // p  6 
(-1.41421356e-04  1.41421356e-04 1.00000000e-02)  // p  7 
(-1.41421356e-04  -1.41421356e-04 5.50000000e-02)  // p  8 
(1.41421356e-04  -1.41421356e-04 5.50000000e-02)  // p  9 
(1.41421356e-04  1.41421356e-04 5.50000000e-02)  // p 10 
(-1.41421356e-04  1.41421356e-04 5.50000000e-02)  // p 11 
(-2.12132034e-04  -2.12132034e-04 0.00000000e+00)  // p 12 
(2.12132034e-04  -2.12132034e-04 0.00000000e+00)  // p 13 
(2.12132034e-04  2.12132034e-04 0.00000000e+00)  // p 14 
(-2.12132034e-04  2.12132034e-04 0.00000000e+00)  // p 15 
(-2.12132034e-04  -2.12132034e-04 1.00000000e-02)  // p 16 
(2.12132034e-04  -2.12132034e-04 1.00000000e-02)  // p 17 
(2.12132034e-04  2.12132034e-04 1.00000000e-02)  // p 18 
(-2.12132034e-04  2.12132034e-04 1.00000000e-02)  // p 19 
(-2.12132034e-04  -2.12132034e-04 5.50000000e-02)  // p 20 
(2.12132034e-04  -2.12132034e-04 5.50000000e-02)  // p 21 
(2.12132034e-04  2.12132034e-04 5.50000000e-02)  // p 22 
(-2.12132034e-04  2.12132034e-04 5.50000000e-02)  // p 23 
(-1.20208153e-02  -1.20208153e-02 0.00000000e+00)  // p 24 
(1.20208153e-02  -1.20208153e-02 0.00000000e+00)  // p 25 
(1.20208153e-02  1.20208153e-02 0.00000000e+00)  // p 26 
(-1.20208153e-02  1.20208153e-02 0.00000000e+00)  // p 27 
(-1.20208153e-02  -1.20208153e-02 1.00000000e-02)  // p 28 
(1.20208153e-02  -1.20208153e-02 1.00000000e-02)  // p 29 
(1.20208153e-02  1.20208153e-02 1.00000000e-02)  // p 30 
(-1.20208153e-02  1.20208153e-02 1.00000000e-02)  // p 31 
(-1.20208153e-02  -1.20208153e-02 5.50000000e-02)  // p 32 
(1.20208153e-02  -1.20208153e-02 5.50000000e-02)  // p 33 
(1.20208153e-02  1.20208153e-02 5.50000000e-02)  // p 34 
(-1.20208153e-02  1.20208153e-02 5.50000000e-02)  // p 35 
);

blocks
(
    hex (  0    1    2    3    4    5    6    7)(   12   12   80 ) simpleGrading (  1  1  1 ) // block  0 
    hex (  4    5    6    7    8    9   10   11)(   12   12  140 ) simpleGrading (  1  1  5 ) // block  1 
    hex (  1    0   12   13    5    4   16   17)(   12    4   80 ) simpleGrading (  1  1  1 ) // block  2 
    hex (  2    1   13   14    6    5   17   18)(   12    4   80 ) simpleGrading (  1  1  1 ) // block  3 
    hex (  3    2   14   15    7    6   18   19)(   12    4   80 ) simpleGrading (  1  1  1 ) // block  4 
    hex (  0    3   15   12    4    7   19   16)(   12    4   80 ) simpleGrading (  1  1  1 ) // block  5 
    hex (  5    4   16   17    9    8   20   21)(   12    4  140 ) simpleGrading (  1  1  5 ) // block  6 
    hex (  6    5   17   18   10    9   21   22)(   12    4  140 ) simpleGrading (  1  1  5 ) // block  7 
    hex (  7    6   18   19   11   10   22   23)(   12    4  140 ) simpleGrading (  1  1  5 ) // block  8 
    hex (  4    7   19   16    8   11   23   20)(   12    4  140 ) simpleGrading (  1  1  5 ) // block  9 
    hex ( 13   12   24   25   17   16   28   29)(   12   80   80 ) simpleGrading (  1 10  1 ) // block 10 
    hex ( 14   13   25   26   18   17   29   30)(   12   80   80 ) simpleGrading (  1 10  1 ) // block 11 
    hex ( 15   14   26   27   19   18   30   31)(   12   80   80 ) simpleGrading (  1 10  1 ) // block 12 
    hex ( 12   15   27   24   16   19   31   28)(   12   80   80 ) simpleGrading (  1 10  1 ) // block 13 
    hex ( 17   16   28   29   21   20   32   33)(   12   80  140 ) simpleGrading (  1 10  5 ) // block 14 
    hex ( 18   17   29   30   22   21   33   34)(   12   80  140 ) simpleGrading (  1 10  5 ) // block 15 
    hex ( 19   18   30   31   23   22   34   35)(   12   80  140 ) simpleGrading (  1 10  5 ) // block 16 
    hex ( 16   19   31   28   20   23   35   32)(   12   80  140 ) simpleGrading (  1 10  5 ) // block 17 
);

edges
(
    arc   0    1  (0.00000000e+00  -1.70710678e-04 0.00000000e+00)
    arc   1    2  (1.70710678e-04  0.00000000e+00 0.00000000e+00)
    arc   2    3  (0.00000000e+00  1.70710678e-04 0.00000000e+00)
    arc   3    0  (-1.70710678e-04  0.00000000e+00 0.00000000e+00)
    arc   4    5  (0.00000000e+00  -1.70710678e-04 1.00000000e-02)
    arc   5    6  (1.70710678e-04  0.00000000e+00 1.00000000e-02)
    arc   6    7  (0.00000000e+00  1.70710678e-04 1.00000000e-02)
    arc   7    4  (-1.70710678e-04  0.00000000e+00 1.00000000e-02)
    arc   8    9  (0.00000000e+00  -1.70710678e-04 5.50000000e-02)
    arc   9   10  (1.70710678e-04  0.00000000e+00 5.50000000e-02)
    arc  10   11  (0.00000000e+00  1.70710678e-04 5.50000000e-02)
    arc  11    8  (-1.70710678e-04  0.00000000e+00 5.50000000e-02)
    arc  12   13  (0.00000000e+00  -3.00000000e-04 0.00000000e+00)
    arc  13   14  (3.00000000e-04  0.00000000e+00 0.00000000e+00)
    arc  14   15  (0.00000000e+00  3.00000000e-04 0.00000000e+00)
    arc  15   12  (-3.00000000e-04  0.00000000e+00 0.00000000e+00)
    arc  16   17  (0.00000000e+00  -3.00000000e-04 1.00000000e-02)
    arc  17   18  (3.00000000e-04  0.00000000e+00 1.00000000e-02)
    arc  18   19  (0.00000000e+00  3.00000000e-04 1.00000000e-02)
    arc  19   16  (-3.00000000e-04  0.00000000e+00 1.00000000e-02)
    arc  20   21  (0.00000000e+00  -3.00000000e-04 5.50000000e-02)
    arc  21   22  (3.00000000e-04  0.00000000e+00 5.50000000e-02)
    arc  22   23  (0.00000000e+00  3.00000000e-04 5.50000000e-02)
    arc  23   20  (-3.00000000e-04  0.00000000e+00 5.50000000e-02)
    arc  24   25  (0.00000000e+00  -1.70000000e-02 0.00000000e+00)
    arc  25   26  (1.70000000e-02  0.00000000e+00 0.00000000e+00)
    arc  26   27  (0.00000000e+00  1.70000000e-02 0.00000000e+00)
    arc  27   24  (-1.70000000e-02  0.00000000e+00 0.00000000e+00)
    arc  28   29  (0.00000000e+00  -1.70000000e-02 1.00000000e-02)
    arc  29   30  (1.70000000e-02  0.00000000e+00 1.00000000e-02)
    arc  30   31  (0.00000000e+00  1.70000000e-02 1.00000000e-02)
    arc  31   28  (-1.70000000e-02  0.00000000e+00 1.00000000e-02)
    arc  32   33  (0.00000000e+00  -1.70000000e-02 5.50000000e-02)
    arc  33   34  (1.70000000e-02  0.00000000e+00 5.50000000e-02)
    arc  34   35  (0.00000000e+00  1.70000000e-02 5.50000000e-02)
    arc  35   32  (-1.70000000e-02  0.00000000e+00 5.50000000e-02)
);

boundary
(
   HeInlet
   {
      type inlet ;
      faces (
         (  3   2   1   0)
         ( 13  12   0   1)
         ( 14  13   1   2)
         ( 15  14   2   3)
         ( 12  15   3   0)
      );
   }
   airInlet
   {
      type patch ;
      faces (
         ( 25  24  12  13)
         ( 26  25  13  14)
         ( 27  26  14  15)
         ( 24  27  15  12)
      );
   }
   outlet
   {
      type patch ;
      faces (
         (  8   9  10  11)
         (  9   8  20  21)
         ( 10   9  21  22)
         ( 11  10  22  23)
         (  8  11  23  20)
         ( 21  20  32  33)
         ( 22  21  33  34)
         ( 23  22  34  35)
         ( 20  23  35  32)
      );
   }
   farfield
   {
      type outlet;
      faces (
         ( 29  28  24  25)
         ( 30  29  25  26)
         ( 31  30  26  27)
         ( 28  31  27  24)
         ( 33  32  28  29)
         ( 34  33  29  30)
         ( 35  34  30  31)
         ( 32  35  31  28)
      );
   }
);

mergePatchPairs();