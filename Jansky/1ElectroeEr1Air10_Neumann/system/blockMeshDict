/*--------------------------------*- C++ -*----------------------------------*\ 
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
version     2.0;
format      ascii;
class       dictionary;
object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1.0000e+00;

vertices
(
(-5.65685425e-04  -5.65685425e-04 -1.02500000e-01)  // p  0 
(5.65685425e-04  -5.65685425e-04 -1.02500000e-01)  // p  1 
(5.65685425e-04  5.65685425e-04 -1.02500000e-01)  // p  2 
(-5.65685425e-04  5.65685425e-04 -1.02500000e-01)  // p  3 
(-5.65685425e-04  -5.65685425e-04 -2.50000000e-03)  // p  4 
(5.65685425e-04  -5.65685425e-04 -2.50000000e-03)  // p  5 
(5.65685425e-04  5.65685425e-04 -2.50000000e-03)  // p  6 
(-5.65685425e-04  5.65685425e-04 -2.50000000e-03)  // p  7 
(-5.65685425e-04  -5.65685425e-04 2.50000000e-03)  // p  8 
(5.65685425e-04  -5.65685425e-04 2.50000000e-03)  // p  9 
(5.65685425e-04  5.65685425e-04 2.50000000e-03)  // p 10 
(-5.65685425e-04  5.65685425e-04 2.50000000e-03)  // p 11 
(-5.65685425e-04  -5.65685425e-04 1.02500000e-01)  // p 12 
(5.65685425e-04  -5.65685425e-04 1.02500000e-01)  // p 13 
(5.65685425e-04  5.65685425e-04 1.02500000e-01)  // p 14 
(-5.65685425e-04  5.65685425e-04 1.02500000e-01)  // p 15 
(-1.13137085e-03  -1.13137085e-03 -1.02500000e-01)  // p 16 
(1.13137085e-03  -1.13137085e-03 -1.02500000e-01)  // p 17 
(1.13137085e-03  1.13137085e-03 -1.02500000e-01)  // p 18 
(-1.13137085e-03  1.13137085e-03 -1.02500000e-01)  // p 19 
(-1.13137085e-03  -1.13137085e-03 -2.50000000e-03)  // p 20 
(1.13137085e-03  -1.13137085e-03 -2.50000000e-03)  // p 21 
(1.13137085e-03  1.13137085e-03 -2.50000000e-03)  // p 22 
(-1.13137085e-03  1.13137085e-03 -2.50000000e-03)  // p 23 
(-1.13137085e-03  -1.13137085e-03 2.50000000e-03)  // p 24 
(1.13137085e-03  -1.13137085e-03 2.50000000e-03)  // p 25 
(1.13137085e-03  1.13137085e-03 2.50000000e-03)  // p 26 
(-1.13137085e-03  1.13137085e-03 2.50000000e-03)  // p 27 
(-1.13137085e-03  -1.13137085e-03 1.02500000e-01)  // p 28 
(1.13137085e-03  -1.13137085e-03 1.02500000e-01)  // p 29 
(1.13137085e-03  1.13137085e-03 1.02500000e-01)  // p 30 
(-1.13137085e-03  1.13137085e-03 1.02500000e-01)  // p 31 
(-2.26274170e-03  -2.26274170e-03 -1.02500000e-01)  // p 32 
(2.26274170e-03  -2.26274170e-03 -1.02500000e-01)  // p 33 
(2.26274170e-03  2.26274170e-03 -1.02500000e-01)  // p 34 
(-2.26274170e-03  2.26274170e-03 -1.02500000e-01)  // p 35 
(-2.26274170e-03  -2.26274170e-03 -2.50000000e-03)  // p 36 
(2.26274170e-03  -2.26274170e-03 -2.50000000e-03)  // p 37 
(2.26274170e-03  2.26274170e-03 -2.50000000e-03)  // p 38 
(-2.26274170e-03  2.26274170e-03 -2.50000000e-03)  // p 39 
(-2.26274170e-03  -2.26274170e-03 2.50000000e-03)  // p 40 
(2.26274170e-03  -2.26274170e-03 2.50000000e-03)  // p 41 
(2.26274170e-03  2.26274170e-03 2.50000000e-03)  // p 42 
(-2.26274170e-03  2.26274170e-03 2.50000000e-03)  // p 43 
(-2.26274170e-03  -2.26274170e-03 1.02500000e-01)  // p 44 
(2.26274170e-03  -2.26274170e-03 1.02500000e-01)  // p 45 
(2.26274170e-03  2.26274170e-03 1.02500000e-01)  // p 46 
(-2.26274170e-03  2.26274170e-03 1.02500000e-01)  // p 47 
(-2.40416306e-03  -2.40416306e-03 -1.02500000e-01)  // p 48 
(2.40416306e-03  -2.40416306e-03 -1.02500000e-01)  // p 49 
(2.40416306e-03  2.40416306e-03 -1.02500000e-01)  // p 50 
(-2.40416306e-03  2.40416306e-03 -1.02500000e-01)  // p 51 
(-2.40416306e-03  -2.40416306e-03 -2.50000000e-03)  // p 52 
(2.40416306e-03  -2.40416306e-03 -2.50000000e-03)  // p 53 
(2.40416306e-03  2.40416306e-03 -2.50000000e-03)  // p 54 
(-2.40416306e-03  2.40416306e-03 -2.50000000e-03)  // p 55 
(-2.40416306e-03  -2.40416306e-03 2.50000000e-03)  // p 56 
(2.40416306e-03  -2.40416306e-03 2.50000000e-03)  // p 57 
(2.40416306e-03  2.40416306e-03 2.50000000e-03)  // p 58 
(-2.40416306e-03  2.40416306e-03 2.50000000e-03)  // p 59 
(-2.40416306e-03  -2.40416306e-03 1.02500000e-01)  // p 60 
(2.40416306e-03  -2.40416306e-03 1.02500000e-01)  // p 61 
(2.40416306e-03  2.40416306e-03 1.02500000e-01)  // p 62 
(-2.40416306e-03  2.40416306e-03 1.02500000e-01)  // p 63 
(-7.07106781e-03  -7.07106781e-03 -1.02500000e-01)  // p 64 
(7.07106781e-03  -7.07106781e-03 -1.02500000e-01)  // p 65 
(7.07106781e-03  7.07106781e-03 -1.02500000e-01)  // p 66 
(-7.07106781e-03  7.07106781e-03 -1.02500000e-01)  // p 67 
(-7.07106781e-03  -7.07106781e-03 -2.50000000e-03)  // p 68 
(7.07106781e-03  -7.07106781e-03 -2.50000000e-03)  // p 69 
(7.07106781e-03  7.07106781e-03 -2.50000000e-03)  // p 70 
(-7.07106781e-03  7.07106781e-03 -2.50000000e-03)  // p 71 
(-7.07106781e-03  -7.07106781e-03 2.50000000e-03)  // p 72 
(7.07106781e-03  -7.07106781e-03 2.50000000e-03)  // p 73 
(7.07106781e-03  7.07106781e-03 2.50000000e-03)  // p 74 
(-7.07106781e-03  7.07106781e-03 2.50000000e-03)  // p 75 
(-7.07106781e-03  -7.07106781e-03 1.02500000e-01)  // p 76 
(7.07106781e-03  -7.07106781e-03 1.02500000e-01)  // p 77 
(7.07106781e-03  7.07106781e-03 1.02500000e-01)  // p 78 
(-7.07106781e-03  7.07106781e-03 1.02500000e-01)  // p 79 
);

blocks
(
    hex (  0    1    2    3    4    5    6    7)(   20   20   80 ) simpleGrading (  1  1 1.000000e-02 ) // block  0 
    hex (  4    5    6    7    8    9   10   11)(   20   20   80 ) simpleGrading (  1  1  1 ) // block  1 
    hex (  8    9   10   11   12   13   14   15)(   20   20   80 ) simpleGrading (  1  1 100 ) // block  2 
    hex (  1    0   16   17    5    4   20   21)(   20   10   80 ) simpleGrading (  1  1 1.000000e-02 ) // block  3 
    hex (  2    1   17   18    6    5   21   22)(   20   10   80 ) simpleGrading (  1  1 1.000000e-02 ) // block  4 
    hex (  3    2   18   19    7    6   22   23)(   20   10   80 ) simpleGrading (  1  1 1.000000e-02 ) // block  5 
    hex (  0    3   19   16    4    7   23   20)(   20   10   80 ) simpleGrading (  1  1 1.000000e-02 ) // block  6 
    hex (  5    4   20   21    9    8   24   25)(   20   10   80 ) simpleGrading (  1  1  1 ) // block  7 
    hex (  6    5   21   22   10    9   25   26)(   20   10   80 ) simpleGrading (  1  1  1 ) // block  8 
    hex (  7    6   22   23   11   10   26   27)(   20   10   80 ) simpleGrading (  1  1  1 ) // block  9 
    hex (  4    7   23   20    8   11   27   24)(   20   10   80 ) simpleGrading (  1  1  1 ) // block 10 
    hex (  9    8   24   25   13   12   28   29)(   20   10   80 ) simpleGrading (  1  1 100 ) // block 11 
    hex ( 10    9   25   26   14   13   29   30)(   20   10   80 ) simpleGrading (  1  1 100 ) // block 12 
    hex ( 11   10   26   27   15   14   30   31)(   20   10   80 ) simpleGrading (  1  1 100 ) // block 13 
    hex (  8   11   27   24   12   15   31   28)(   20   10   80 ) simpleGrading (  1  1 100 ) // block 14 
    hex ( 17   16   32   33   21   20   36   37)(   20   10   80 ) simpleGrading (  1  1 1.000000e-02 ) // block 15 
    hex ( 18   17   33   34   22   21   37   38)(   20   10   80 ) simpleGrading (  1  1 1.000000e-02 ) // block 16 
    hex ( 19   18   34   35   23   22   38   39)(   20   10   80 ) simpleGrading (  1  1 1.000000e-02 ) // block 17 
    hex ( 16   19   35   32   20   23   39   36)(   20   10   80 ) simpleGrading (  1  1 1.000000e-02 ) // block 18 
    hex ( 21   20   36   37   25   24   40   41)(   20   10   80 ) simpleGrading (  1  1  1 ) // block 19 
    hex ( 22   21   37   38   26   25   41   42)(   20   10   80 ) simpleGrading (  1  1  1 ) // block 20 
    hex ( 23   22   38   39   27   26   42   43)(   20   10   80 ) simpleGrading (  1  1  1 ) // block 21 
    hex ( 20   23   39   36   24   27   43   40)(   20   10   80 ) simpleGrading (  1  1  1 ) // block 22 
    hex ( 25   24   40   41   29   28   44   45)(   20   10   80 ) simpleGrading (  1  1 100 ) // block 23 
    hex ( 26   25   41   42   30   29   45   46)(   20   10   80 ) simpleGrading (  1  1 100 ) // block 24 
    hex ( 27   26   42   43   31   30   46   47)(   20   10   80 ) simpleGrading (  1  1 100 ) // block 25 
    hex ( 24   27   43   40   28   31   47   44)(   20   10   80 ) simpleGrading (  1  1 100 ) // block 26 
    hex ( 33   32   48   49   37   36   52   53)(   20    5   80 ) simpleGrading (  1  1 1.000000e-02 ) // block 27 
    hex ( 34   33   49   50   38   37   53   54)(   20    5   80 ) simpleGrading (  1  1 1.000000e-02 ) // block 28 
    hex ( 35   34   50   51   39   38   54   55)(   20    5   80 ) simpleGrading (  1  1 1.000000e-02 ) // block 29 
    hex ( 32   35   51   48   36   39   55   52)(   20    5   80 ) simpleGrading (  1  1 1.000000e-02 ) // block 30 
    hex ( 41   40   56   57   45   44   60   61)(   20    5   80 ) simpleGrading (  1  1 100 ) // block 31 
    hex ( 42   41   57   58   46   45   61   62)(   20    5   80 ) simpleGrading (  1  1 100 ) // block 32 
    hex ( 43   42   58   59   47   46   62   63)(   20    5   80 ) simpleGrading (  1  1 100 ) // block 33 
    hex ( 40   43   59   56   44   47   63   60)(   20    5   80 ) simpleGrading (  1  1 100 ) // block 34 
    hex ( 49   48   64   65   53   52   68   69)(   20   20   80 ) simpleGrading (  1 20 1.000000e-02 ) // block 35 
    hex ( 50   49   65   66   54   53   69   70)(   20   20   80 ) simpleGrading (  1 20 1.000000e-02 ) // block 36 
    hex ( 51   50   66   67   55   54   70   71)(   20   20   80 ) simpleGrading (  1 20 1.000000e-02 ) // block 37 
    hex ( 48   51   67   64   52   55   71   68)(   20   20   80 ) simpleGrading (  1 20 1.000000e-02 ) // block 38 
    hex ( 53   52   68   69   57   56   72   73)(   20   20   80 ) simpleGrading (  1 20  1 ) // block 39 
    hex ( 54   53   69   70   58   57   73   74)(   20   20   80 ) simpleGrading (  1 20  1 ) // block 40 
    hex ( 55   54   70   71   59   58   74   75)(   20   20   80 ) simpleGrading (  1 20  1 ) // block 41 
    hex ( 52   55   71   68   56   59   75   72)(   20   20   80 ) simpleGrading (  1 20  1 ) // block 42 
    hex ( 57   56   72   73   61   60   76   77)(   20   20   80 ) simpleGrading (  1 20 100 ) // block 43 
    hex ( 58   57   73   74   62   61   77   78)(   20   20   80 ) simpleGrading (  1 20 100 ) // block 44 
    hex ( 59   58   74   75   63   62   78   79)(   20   20   80 ) simpleGrading (  1 20 100 ) // block 45 
    hex ( 56   59   75   72   60   63   79   76)(   20   20   80 ) simpleGrading (  1 20 100 ) // block 46 
);

edges
(
    arc   0    1  (0.00000000e+00  -6.82842712e-04 -1.02500000e-01)
    arc   1    2  (6.82842712e-04  0.00000000e+00 -1.02500000e-01)
    arc   2    3  (0.00000000e+00  6.82842712e-04 -1.02500000e-01)
    arc   3    0  (-6.82842712e-04  0.00000000e+00 -1.02500000e-01)
    arc   4    5  (0.00000000e+00  -6.82842712e-04 -2.50000000e-03)
    arc   5    6  (6.82842712e-04  0.00000000e+00 -2.50000000e-03)
    arc   6    7  (0.00000000e+00  6.82842712e-04 -2.50000000e-03)
    arc   7    4  (-6.82842712e-04  0.00000000e+00 -2.50000000e-03)
    arc   8    9  (0.00000000e+00  -6.82842712e-04 2.50000000e-03)
    arc   9   10  (6.82842712e-04  0.00000000e+00 2.50000000e-03)
    arc  10   11  (0.00000000e+00  6.82842712e-04 2.50000000e-03)
    arc  11    8  (-6.82842712e-04  0.00000000e+00 2.50000000e-03)
    arc  12   13  (0.00000000e+00  -6.82842712e-04 1.02500000e-01)
    arc  13   14  (6.82842712e-04  0.00000000e+00 1.02500000e-01)
    arc  14   15  (0.00000000e+00  6.82842712e-04 1.02500000e-01)
    arc  15   12  (-6.82842712e-04  0.00000000e+00 1.02500000e-01)
    arc  16   17  (0.00000000e+00  -1.60000000e-03 -1.02500000e-01)
    arc  17   18  (1.60000000e-03  0.00000000e+00 -1.02500000e-01)
    arc  18   19  (0.00000000e+00  1.60000000e-03 -1.02500000e-01)
    arc  19   16  (-1.60000000e-03  0.00000000e+00 -1.02500000e-01)
    arc  20   21  (0.00000000e+00  -1.60000000e-03 -2.50000000e-03)
    arc  21   22  (1.60000000e-03  0.00000000e+00 -2.50000000e-03)
    arc  22   23  (0.00000000e+00  1.60000000e-03 -2.50000000e-03)
    arc  23   20  (-1.60000000e-03  0.00000000e+00 -2.50000000e-03)
    arc  24   25  (0.00000000e+00  -1.60000000e-03 2.50000000e-03)
    arc  25   26  (1.60000000e-03  0.00000000e+00 2.50000000e-03)
    arc  26   27  (0.00000000e+00  1.60000000e-03 2.50000000e-03)
    arc  27   24  (-1.60000000e-03  0.00000000e+00 2.50000000e-03)
    arc  28   29  (0.00000000e+00  -1.60000000e-03 1.02500000e-01)
    arc  29   30  (1.60000000e-03  0.00000000e+00 1.02500000e-01)
    arc  30   31  (0.00000000e+00  1.60000000e-03 1.02500000e-01)
    arc  31   28  (-1.60000000e-03  0.00000000e+00 1.02500000e-01)
    arc  32   33  (0.00000000e+00  -3.20000000e-03 -1.02500000e-01)
    arc  33   34  (3.20000000e-03  0.00000000e+00 -1.02500000e-01)
    arc  34   35  (0.00000000e+00  3.20000000e-03 -1.02500000e-01)
    arc  35   32  (-3.20000000e-03  0.00000000e+00 -1.02500000e-01)
    arc  36   37  (0.00000000e+00  -3.20000000e-03 -2.50000000e-03)
    arc  37   38  (3.20000000e-03  0.00000000e+00 -2.50000000e-03)
    arc  38   39  (0.00000000e+00  3.20000000e-03 -2.50000000e-03)
    arc  39   36  (-3.20000000e-03  0.00000000e+00 -2.50000000e-03)
    arc  40   41  (0.00000000e+00  -3.20000000e-03 2.50000000e-03)
    arc  41   42  (3.20000000e-03  0.00000000e+00 2.50000000e-03)
    arc  42   43  (0.00000000e+00  3.20000000e-03 2.50000000e-03)
    arc  43   40  (-3.20000000e-03  0.00000000e+00 2.50000000e-03)
    arc  44   45  (0.00000000e+00  -3.20000000e-03 1.02500000e-01)
    arc  45   46  (3.20000000e-03  0.00000000e+00 1.02500000e-01)
    arc  46   47  (0.00000000e+00  3.20000000e-03 1.02500000e-01)
    arc  47   44  (-3.20000000e-03  0.00000000e+00 1.02500000e-01)
    arc  48   49  (0.00000000e+00  -3.40000000e-03 -1.02500000e-01)
    arc  49   50  (3.40000000e-03  0.00000000e+00 -1.02500000e-01)
    arc  50   51  (0.00000000e+00  3.40000000e-03 -1.02500000e-01)
    arc  51   48  (-3.40000000e-03  0.00000000e+00 -1.02500000e-01)
    arc  52   53  (0.00000000e+00  -3.40000000e-03 -2.50000000e-03)
    arc  53   54  (3.40000000e-03  0.00000000e+00 -2.50000000e-03)
    arc  54   55  (0.00000000e+00  3.40000000e-03 -2.50000000e-03)
    arc  55   52  (-3.40000000e-03  0.00000000e+00 -2.50000000e-03)
    arc  56   57  (0.00000000e+00  -3.40000000e-03 2.50000000e-03)
    arc  57   58  (3.40000000e-03  0.00000000e+00 2.50000000e-03)
    arc  58   59  (0.00000000e+00  3.40000000e-03 2.50000000e-03)
    arc  59   56  (-3.40000000e-03  0.00000000e+00 2.50000000e-03)
    arc  60   61  (0.00000000e+00  -3.40000000e-03 1.02500000e-01)
    arc  61   62  (3.40000000e-03  0.00000000e+00 1.02500000e-01)
    arc  62   63  (0.00000000e+00  3.40000000e-03 1.02500000e-01)
    arc  63   60  (-3.40000000e-03  0.00000000e+00 1.02500000e-01)
    arc  64   65  (0.00000000e+00  -1.00000000e-02 -1.02500000e-01)
    arc  65   66  (1.00000000e-02  0.00000000e+00 -1.02500000e-01)
    arc  66   67  (0.00000000e+00  1.00000000e-02 -1.02500000e-01)
    arc  67   64  (-1.00000000e-02  0.00000000e+00 -1.02500000e-01)
    arc  68   69  (0.00000000e+00  -1.00000000e-02 -2.50000000e-03)
    arc  69   70  (1.00000000e-02  0.00000000e+00 -2.50000000e-03)
    arc  70   71  (0.00000000e+00  1.00000000e-02 -2.50000000e-03)
    arc  71   68  (-1.00000000e-02  0.00000000e+00 -2.50000000e-03)
    arc  72   73  (0.00000000e+00  -1.00000000e-02 2.50000000e-03)
    arc  73   74  (1.00000000e-02  0.00000000e+00 2.50000000e-03)
    arc  74   75  (0.00000000e+00  1.00000000e-02 2.50000000e-03)
    arc  75   72  (-1.00000000e-02  0.00000000e+00 2.50000000e-03)
    arc  76   77  (0.00000000e+00  -1.00000000e-02 1.02500000e-01)
    arc  77   78  (1.00000000e-02  0.00000000e+00 1.02500000e-01)
    arc  78   79  (0.00000000e+00  1.00000000e-02 1.02500000e-01)
    arc  79   76  (-1.00000000e-02  0.00000000e+00 1.02500000e-01)
);

boundary
(
   leftPlateHe
   {
      type patch ;
      faces (
         (  3   2   1   0)
         ( 17  16   0   1)
         ( 18  17   1   2)
         ( 19  18   2   3)
         ( 16  19   3   0)
      );
   }
   leftPlateDiel
   {
      type patch ;
      faces (
         ( 33  32  16  17)
         ( 34  33  17  18)
         ( 35  34  18  19)
         ( 32  35  19  16)
      );
   }
   leftPlateAir
   {
      type patch ;
      faces (
         ( 49  48  32  33)
         ( 50  49  33  34)
         ( 51  50  34  35)
         ( 48  51  35  32)
         ( 65  64  48  49)
         ( 66  65  49  50)
         ( 67  66  50  51)
         ( 64  67  51  48)
      );
   }
   airOuter
   {
      type patch ;
      faces (
         ( 69  68  64  65)
         ( 70  69  65  66)
         ( 71  70  66  67)
         ( 68  71  67  64)
         ( 73  72  68  69)
         ( 74  73  69  70)
         ( 75  74  70  71)
         ( 72  75  71  68)
         ( 77  76  72  73)
         ( 78  77  73  74)
         ( 79  78  74  75)
         ( 76  79  75  72)
      );
   }
   electrode
   {
      type patch ;
      faces (
         ( 57  56  40  41)
         ( 58  57  41  42)
         ( 59  58  42  43)
         ( 56  59  43  40)
         ( 37  36  52  53)
         ( 38  37  53  54)
         ( 39  38  54  55)
         ( 36  39  55  52)
         ( 41  40  36  37)
         ( 42  41  37  38)
         ( 43  42  38  39)
         ( 40  43  39  36)
         ( 53  52  56  57)
         ( 54  53  57  58)
         ( 55  54  58  59)
         ( 52  55  59  56)
      );
   }
   rightPlateHe
   {
      type patch ;
      faces (
         ( 12  13  14  15)
         ( 13  12  28  29)
         ( 14  13  29  30)
         ( 15  14  30  31)
         ( 12  15  31  28)
      );
   }
   rightPlateDiel
   {
      type patch ;
      faces (
         ( 29  28  44  45)
         ( 30  29  45  46)
         ( 31  30  46  47)
         ( 28  31  47  44)
      );
   }
   rightPlateAir
   {
      type patch ;
      faces (
         ( 45  44  60  61)
         ( 46  45  61  62)
         ( 47  46  62  63)
         ( 44  47  63  60)
         ( 61  60  76  77)
         ( 62  61  77  78)
         ( 63  62  78  79)
         ( 60  63  79  76)
      );
   }
);

mergePatchPairs();